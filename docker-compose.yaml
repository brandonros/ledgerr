services:
  nginx:
    image: nginx:1.29.0-alpine
    ports:
      - "80:80"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - postgrest
    restart: unless-stopped

  postgrest:
    image: postgrest/postgrest:v13.0.4
    environment:
      PGRST_DB_URI: postgres://postgres:Test_Password123!@pgbouncer:5433/ledgerr
      PGRST_DB_SCHEMAS: ledgerr_api
      PGRST_DB_ANON_ROLE: postgres
      PGRST_DB_POOL: '200'
      PGRST_LOG_LEVEL: 'warn'
      PGRST_DB_POOL_ACQUISITION_TIMEOUT: '10'
    restart: unless-stopped
    deploy:
      replicas: 2
    depends_on:
      - postgres

  postgres:
    image: postgres:17.5-bookworm
    container_name: postgres
    environment:
      POSTGRES_DB: ledgerr
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Test_Password123!
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf:ro
      - ./config/setup-config.sh:/docker-entrypoint-initdb.d/setup-config.sh:ro
    deploy:
      resources:
        limits:
          cpus: '8.0'
          memory: 16G
        reservations:
          cpus: '2.0'
          memory: 8G
    restart: unless-stopped

  pgbouncer:
    image: edoburu/pgbouncer:v1.24.1-p1
    environment:
      AUTH_TYPE: scram-sha-256
      LISTEN_PORT: 5433
      DATABASE_URL: 'postgres://postgres:Test_Password123!@postgres:5432/ledgerr'
      
      # MASSIVE CONNECTION POOL SCALING
      MAX_CLIENT_CONN: "5000"        # Was 1000, now 5000
      DEFAULT_POOL_SIZE: "500"       # Was 250, now 500 per database
      MAX_DB_CONNECTIONS: "1500"     # Was 500, now 1500 total backend
      POOL_MODE: "transaction"       # Keep transaction mode
      
      # Performance Tuning
      RESERVE_POOL_SIZE: "50"        # Was 10, now 50
      RESERVE_POOL_TIMEOUT: "3"      # Faster failover
      
      # Aggressive Timeout Settings for Load Testing
      SERVER_IDLE_TIMEOUT: "300"     # Was 600, now 5 minutes
      CLIENT_IDLE_TIMEOUT: "0"       # Keep disabled
      SERVER_CONNECT_TIMEOUT: "10"   # Was 15, now 10 seconds
      QUERY_TIMEOUT: "60"            # Was 30, now 60 seconds
      
      # Minimal logging for performance
      LOG_CONNECTIONS: "0"
      LOG_DISCONNECTIONS: "0"
      LOG_POOLER_ERRORS: "1"
      LOG_STATS: "1"
      STATS_PERIOD: "30"             # More frequent stats
      
      # Network optimization
      TCP_KEEPALIVE: "1"
      TCP_KEEPCNT: "3"
      TCP_KEEPIDLE: "300"            # More aggressive
      TCP_KEEPINTVL: "15"            # More frequent
      
      ADMIN_USERS: "postgres"
      STATS_USERS: "postgres"
    ports:
      - "5433:5433"
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
